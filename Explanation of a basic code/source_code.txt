I'm explaining here the source_code.c files code Snippet:
_________________________________________________________
1. #include <stdio.h>:

-.-#include: This is a preprocessor directive. Think of it as an instruction 
for the compiler before it actually builds your program. It tells 
the compiler, "Go and grab this file and include its contents right here."

-.-<stdio.h>: This is the name of the file we want to include. 
It stands for Standard Input/Output .header. This file contains 
declarations for basic functions like 'printf' (for printing to the screen) 
and 'scanf' (for reading user input).

2. int main():

-.-int: This is the return type of the function. It means this function 
must return an integer (a whole number) when it's finished. This return 
value is often used to tell the operating system if the program ran 
successfully or not.

-.-main: This is the name of the function. The main function is specialâ€”it's 
the entry point of every C program. When you run your program, the 
operating system always starts executing the code from the main function.

-.-(): The parentheses are where you would put any parameters (inputs)
for the function. In this case, main has no parameters, so they are empty.

3. {  }:

-.-The opening curly brace { marks the beginning of the main function's body.

-.-The closing curly brace } marks the end of the main function's body.

4. printf("Starlight is old lies.\n"); :

-.-printf: This is a function whose name stands for "print formatted".
It's used to print text to the standard output (usually your terminal or console window).

-.-("Starlight is old lies.\n"): This is the argument (the input) 
we are passing to the printf function.

-.-The double quotes "..." tell the compiler that everything inside 
them is a string (a piece of text).

-.-\n:  a special escape sequence. It doesn't print the characters \ and n. 
Instead, it represents a newline character, like pressing the 'Enter' key. 
It moves the cursor to the beginning of the next line.

-.-; : The semicolon marks the end of a statement in C. Think of it like 
a period at the end of a sentence. Most lines that perform an action 
must end with a semicolon.

In simple terms: This line tells the computer to print the text
"Starlight is old lies." to the screen and then go to a new line.

5. return 0; :


-.-return: This is a keyword that exits from the current function 
(main) and gives back a value.

-.-0: This is the value being returned. By convention, returning 0 from 
the main function signals to the operating system that the program 
finished successfully. Any non-zero number (often 1) typically 
indicates that an error occurred.

In simple terms: This is the last instruction of the program, 
telling the operating system "Everything went okay!"
__________________________________________________________________

Basically, these parts are the basic and must required parts of a 'C' code.

            ~Explanation inspired by :   Prof. Dr. Ashikur Rahman 
                                         Department of CSE, BUET
